# Source ble.sh if installed
if [ -f ~/.local/share/blesh/ble.sh ]; then
    # ble.sh @ Top of file
    HAS_BLESH=1
    [[ $- == *i* ]] && source ~/.local/share/blesh/ble.sh --noattach
fi

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias usystemctl=' systemctl --user'
alias fromjson='echo "$(</dev/stdin)" | jq "fromjson"'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
  # Always source userdefined completions
  if [ -f ~/.bash_completion ]; then
    . ~/.bash_completion
  fi
fi
export EDITOR=vim

# WSL specifics...
if [[ $(systemd-detect-virt) == "wsl" ]]; then
    # Enable integration to windows ssh agent
    export SSH_AUTH_SOCK=$HOME/.ssh/agent.sock
    ss -a | grep -q $SSH_AUTH_SOCK
    if [ $? -ne 0 ]; then
        rm -f $SSH_AUTH_SOCK
        ( setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"$HOME/winhome/.wsl/npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork & ) > /dev/null 2>&1
    fi	
fi

# Add ~/bin to PATH
if [[ -d ${HOME}/bin ]]; then
    export PATH="${HOME}/bin:${PATH}"
fi

# Starship
if type -p starship >/dev/null; then
    eval "$(starship init bash)"
fi

# Atuin
if type -p atuin >/dev/null; then
    . "$HOME/.atuin/bin/env"
    eval "$(atuin init bash --disable-up-arrow)"
fi

# Brew
BREWBIN='/home/linuxbrew/.linuxbrew/bin/brew'
if [[ -x $(realpath $BREWBIN) ]]; then
    #eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    eval "$($BREWBIN shellenv)"
fi

# Attach ble if sourced.
if [ $HAS_BLESH ]; then
    # ble.sh @ Bottom of file
    [[ ! ${BLE_VERSION-} ]] || ble-attach
fi
